#!/usr/bin/python
# -*- coding: utf-8 -*-
import config, logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram import types
from aiogram.dispatcher.filters import BoundFilter
from datetime import datetime, timedelta

bot = Bot(token=config.token, parse_mode="html")
dp = Dispatcher(bot=bot)

logging.basicConfig(level=logging.INFO)

dp.filters_factory.bind(IsChannelFilter)

@dp.message_handler(commands="start")
async def start(message):
    await bot.send_message(f"<b>üòÅ–Ø –±–æ—Ç –∞–Ω—Ç–∏ –∫–∞–Ω–∞–ª —á–∞—Ç–æ–≤!\n –Ø –∑–∞–ø—Ä–µ—â–∞—é –ª—é–¥—è–º –ø–∏—Å–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞ –≤ —á–∞—Ç–∞—Ö\n\n–ù–∞–ø–∏—Å–∞–ª –±–æ—Ç–∞ > @NoZiss –¥–ª—è –∫–∞–Ω–∞–ª–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</b>")

class IsChannelFilter(BoundFilter):
    key = "is_channel"
    
    def __init__(self, is_channel):
        self.is_channel = is_channel

@dp.message_handler(is_channel=True)
async def handler_anti_channel(message: types.Message):
    await bot.ban_chat_sender_chat(message.chat.id, message.sender_chat.id)
    await bot.send_message(message.chat.id, f"<b>üòÅ –ö–∞–Ω–∞–ª –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –∏ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å –Ω–µ–≥–æ –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç —á–∞—Ç</b>")
   
if __name__ == "__main__":
   executor.start_polling(dp, skip_updates=False)
